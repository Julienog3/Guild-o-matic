# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Download project from git
        uses: actions/checkout@v3

      - name: Build project
        run: |
          npm install
          npm run build

      # - name: Download project as artifact
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: bundle
      #     path: ./dist

    deploy:
      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET }}
          EXCLUDE: "/dist/, /node_modules/"
          SCRIPT_BEFORE: |
            whoami
            ls -al
          SCRIPT_AFTER: |
            whoami
            ls -al
            echo $RSYNC_STDOUT
      # - name: Deploy app on remote VPS
      #   uses: appleboy/ssh-action@v0.1.7
      #   with: 
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     script: |
      #       export NVM_DIR=~/.nvm
      #       source ~/.nvm/nvm.sh
      #       cd deep-bot
      #       git fetch
      #       git pull
      #       git status
      #       npm install
      #       pm2 restart deep-bot
